<?xml version="1.0" encoding="utf-8"?>
<!-- All Rights Reserved. Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project>

  <PropertyGroup>
    <!-- We use the netcoreapp runner for ILC but change its extension to .exe to satisfy ILC. -->
    <OriginalTestRunnerName>xunit.console.dll</OriginalTestRunnerName>
    <TestRunnerName>xunit.console.exe</TestRunnerName>

    <RemoteExecutorConsoleAppName>RemoteExecutorConsoleApp.exe</RemoteExecutorConsoleAppName>
    <RemoteExecutorConsoleAppNameWithoutExtension>RemoteExecutorConsoleApp</RemoteExecutorConsoleAppNameWithoutExtension>

    <RunCommand>$(TestRunnerName)</RunCommand>
    <GenerateRunScriptDependsOn>$(GenerateRunScriptDependsOn);SetupRunScriptCommands;</GenerateRunScriptDependsOn>
  </PropertyGroup>

  <Target Name="SetupRunScriptCommands">

    <ItemGroup>
      <TargetExecutableNames Include="$(TestRunnerName)"/>
      <TargetExecutableNames Condition="'%(ProjectReference.Filename)' == '$(RemoteExecutorConsoleAppNameWithoutExtension)'" Include="$(RemoteExecutorConsoleAppName)"/>
      
      <RunScriptCommands Include="for /R &quot;$(ILCFXInputFolder)&quot; %25%25I in (%2A) do if not exist &quot;%25%25~nxI&quot; (mklink /H &quot;%25%25~nxI&quot; &quot;%25%25I&quot; >1NUL)" />
      <RunScriptCommands Include="copy /y $(_TestILCFolder)\default.rd.xml %EXECUTION_DIR%" />
      <RunScriptCommands Include="move /y $(OriginalTestRunnerName) $(TestRunnerName)" />
      <RunScriptCommands Include="if exist %EXECUTION_DIR%int rmdir /S /Q %EXECUTION_DIR%int" />
      <RunScriptCommands Include="if exist %EXECUTION_DIR%native rmdir /S /Q %EXECUTION_DIR%native" />
      <RunScriptCommands Include="@(TargetExecutableNames -> '
  call $(_TestILCFolder)\ilc.exe -ExeName %(Identity) -in %EXECUTION_DIR% -out %EXECUTION_DIR%int\%(Identity)\ -usedefaultpinvoke:false -buildtype $(ILCBuildType) -v diag $(_UseSharedAssemblies) $(_ILCWin32)
  set ILCERRORLEVEL=%ERRORLEVEL%
  if NOT [%ILCERRORLEVEL%] == [0] exit /b %ILCERRORLEVEL%
  robocopy /S /NP %EXECUTION_DIR%int\%(Identity)\ %EXECUTION_DIR%native\
  ')"/>
      <RunScriptCommands Include="copy /y $(_TestILCFolder)\CRT\vcruntime140_app.dll %EXECUTION_DIR%native" />
      <RunScriptCommands Include="echo > %EXECUTION_DIR%\native\$(TestAssembly)"/>
      <RunScriptCommands Include="cd native"/>

      <!-- These will cause failures if execution is skipped, such as on ARM -->
      <PostRunScriptCommands Condition="'$(ArchGroup)' != 'arm'" Include="copy /y $(TestResultsName) %EXECUTION_DIR%\" />
    </ItemGroup>

  </Target>

</Project>