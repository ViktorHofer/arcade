<?xml version="1.0" encoding="utf-8"?>
<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project>

  <PropertyGroup>
    <CoverageUploadExecutablePath Condition="'$(CoverageUploadExecutablePath)' == '' AND '$(TargetOS)' == 'Windows_NT'">$(RunScriptGlobalToolsDir)codecov.exe</CoverageUploadExecutablePath>
    <CoverageUploadExecutablePath Condition="'$(CoverageUploadExecutablePath)' == '' AND '$(TargetOS)' != 'Windows_NT'">$(RunScriptGlobalToolsDir)codecov</CoverageUploadExecutablePath>

    <CoverageUploadBranchName Condition="'$(CoverageUploadBranchName)' == ''">$(SYSTEM_PULLREQUEST_SOURCEBRANCH)</CoverageUploadBranchName>
    <CoverageUploadBranchName Condition="'$(CoverageUploadBranchName)' == ''">$(BUILD_SOURCEBRANCHNAME)</CoverageUploadBranchName>

    <CoverageUploadArgs>--file "$(CoverageOutputPath)"</CoverageUploadArgs>
    <CoverageUploadArgs>$(CoverageUploadArgs) --name $(AssemblyName)</CoverageUploadArgs>
    <CoverageUploadArgs>$(CoverageUploadArgs) --flag $(ConfigurationGroup)</CoverageUploadArgs>
    <CoverageUploadArgs Condition="'$(BUILD_REPOSITORY_NAME)' != ''">$(CoverageUploadArgs) --slug dotnet/corefx</CoverageUploadArgs>
    <CoverageUploadArgs Condition="'$(SYSTEM_PULLREQUEST_PULLREQUESTNUMBER)' != ''">$(CoverageUploadArgs) --pr $(SYSTEM_PULLREQUEST_PULLREQUESTNUMBER)</CoverageUploadArgs>
    <CoverageUploadArgs Condition="'$(CoverageUploadBranchName)' != ''">$(CoverageUploadArgs) --branch $(CoverageUploadBranchName)</CoverageUploadArgs>
    <CoverageUploadArgs Condition="'$(BUILD_SOURCEVERSION)' != ''">$(CoverageUploadArgs) --sha $(BUILD_SOURCEVERSION)</CoverageUploadArgs>
    <CoverageUploadArgs Condition="'$(BUILD_BUILDNUMBER)' != ''">$(CoverageUploadArgs) --build $(BUILD_BUILDNUMBER)</CoverageUploadArgs>
    <!-- Allow to override the token. -->
    <CoverageUploadArgs Condition="'$(CoverageUploadToken)' != ''">$(CoverageUploadArgs) --token $(CoverageUploadToken)</CoverageUploadArgs>
   <!-- Use verbose logging. -->
   <CoverageUploadArgs Condition="'$(CoverageUploadVerbose)' == ''">$(CoverageUploadArgs) --verbose</CoverageUploadArgs>
   <!-- Path to the coverage service config file in the repository. -->
   <CoverageUploadArgs Condition="'$(CoverageUploadConfig)' == ''">$(CoverageUploadArgs) --yaml codecov.yml</CoverageUploadArgs>
    <!--
      disable-s3: use v2 api instead of v4 as v4 currently throws for big chunks of data.
      required: if upload not successful return with a non-zero exit code.
      disable-network: don't include repository files as we upload from helix outside of the repository.
    -->
    <CoverageUploadArgs>$(CoverageUploadArgs) --disable-s3 --required --disable-network</CoverageUploadArgs>

    <CoverageUploadCommandLine>"$(CoverageUploadExecutablePath)" $(CoverageUploadArgs)</CoverageUploadCommandLine>
  </PropertyGroup>

  <ItemGroup>
    <PostRunScriptCommands Include="$(CoverageUploadCommandLine)" />
  </ItemGroup>

</Project>
